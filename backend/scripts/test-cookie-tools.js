#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { validateCookieFile } = require('./validate-cookies');
const { fixCookieFile } = require('./fix-cookies');

// Create test directory if it doesn't exist
const testDir = path.join(__dirname, 'test-cookies');
if (!fs.existsSync(testDir)) {
    fs.mkdirSync(testDir);
}

// Sample valid cookie file
const validCookieFile = path.join(testDir, 'valid-cookies.txt');
fs.writeFileSync(validCookieFile,
    `# Netscape HTTP Cookie File
# https://curl.se/docs/http-cookies.html
# This file was generated by a script. Edit at your own risk.

www.youtube.com	TRUE	/	TRUE	1722647589	VISITOR_INFO1_LIVE	1234abcd
www.youtube.com	TRUE	/	TRUE	1722647589	LOGIN_INFO	AFmmF2swRAIgESKDHF93_jweifjdsiKDJF90f
.youtube.com	TRUE	/	TRUE	1722647589	SID	LAkfj-0dfj_0DF90FSDKJsdkfj
.youtube.com	TRUE	/	TRUE	1722647589	HSID	AKDJFLSDkfjlskdjflksdjfl
`);

// Sample invalid cookie file (various issues)
const invalidCookieFile = path.join(testDir, 'invalid-cookies.txt');
fs.writeFileSync(invalidCookieFile,
    `NOT A PROPER HEADER
www.youtube.com TRUE / TRUE 0 SOCS CAISNQgDEitib3FfaWRlbnRpdHlmcm9udGVuZHVpc2VydmVyXzIwMjMwODI5LjA3X3AxGgJlbiADGgYIgJnPpwY
.youtube.com TRUE / MAYBE notanumber HSID AKDJFLSDkfjlskdjflksdjfl
youtube.com	/	1722647589	LOGIN_INFO	AFmmF2swRAIgESKDHF93_jweifjdsiKDJF90f
	TRUE	/	TRUE	1722647589	SID	LAkfj-0dfj_0DF90FSDKJsdkfj
`);

// Sample empty cookie file
const emptyCookieFile = path.join(testDir, 'empty-cookies.txt');
fs.writeFileSync(emptyCookieFile, '');

// Function to run the tests
async function runTests() {
    console.log('\n=============================');
    console.log('COOKIE FILE TOOL TESTING');
    console.log('=============================\n');

    // Test 1: Validate a valid cookie file
    console.log('\n--- TEST 1: Validating a properly formatted cookie file ---');
    validateCookieFile(validCookieFile);

    // Test 2: Validate an invalid cookie file
    console.log('\n--- TEST 2: Validating a malformed cookie file ---');
    validateCookieFile(invalidCookieFile);

    // Test 3: Validate an empty cookie file
    console.log('\n--- TEST 3: Validating an empty cookie file ---');
    validateCookieFile(emptyCookieFile);

    // Test 4: Fix an invalid cookie file
    console.log('\n--- TEST 4: Fixing a malformed cookie file ---');
    const fixedFile = path.join(testDir, 'fixed-cookies.txt');
    fixCookieFile(invalidCookieFile, fixedFile);

    // Test 5: Fix an empty cookie file
    console.log('\n--- TEST 5: Fixing an empty cookie file ---');
    const fixedEmptyFile = path.join(testDir, 'fixed-empty-cookies.txt');
    fixCookieFile(emptyCookieFile, fixedEmptyFile);

    console.log('\n=============================');
    console.log('TESTING COMPLETE');
    console.log('=============================\n');

    console.log('Test files created in:', testDir);
}

// Run the tests
runTests(); 