#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

/**
 * Convert cookies from JSON format (like EditThisCookie exports) to Netscape format for yt-dlp
 */
function convertCookies(inputFile, outputFile) {
    console.log(`Reading cookies from ${inputFile}...`);

    try {
        // Read and parse JSON cookies
        const cookiesJson = fs.readFileSync(inputFile, 'utf8');
        const cookies = JSON.parse(cookiesJson);

        // Netscape cookie file header
        const netscapeHeader = '# Netscape HTTP Cookie File\n' +
            '# https://curl.haxx.se/docs/http-cookies.html\n' +
            '# This file was generated by convert-cookies.js\n' +
            '# The file is used by tools like curl and yt-dlp\n\n';

        // Convert each cookie to Netscape format
        const netscapeCookies = cookies.map(cookie => {
            // Format: domain flag path secure expiry name value
            const domain = cookie.domain.startsWith('.') ? cookie.domain : `.${cookie.domain}`;
            const flag = 'TRUE'; // Allow all paths
            const path = cookie.path || '/';
            const secure = cookie.secure ? 'TRUE' : 'FALSE';

            // Convert expiration date to Unix timestamp (seconds)
            let expiry = '0'; // Session cookie
            if (cookie.expirationDate) {
                expiry = Math.floor(cookie.expirationDate).toString();
            }

            const name = cookie.name;
            const value = cookie.value;

            // Join fields with tabs
            return `${domain}\t${flag}\t${path}\t${secure}\t${expiry}\t${name}\t${value}`;
        }).join('\n');

        // Write the Netscape format cookies
        fs.writeFileSync(outputFile, netscapeHeader + netscapeCookies + '\n');

        console.log(`Cookies successfully converted and saved to ${outputFile}`);
        console.log(`Total cookies converted: ${cookies.length}`);
    } catch (error) {
        console.error('Error converting cookies:', error.message);
        process.exit(1);
    }
}

// Get input and output file paths from command line arguments or use defaults
const inputFile = process.argv[2] || './youtube_cookies.json';
const outputFile = process.argv[3] || './youtube_cookies.txt';

convertCookies(inputFile, outputFile); 