#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

/**
 * Convert cookies from JSON format (as exported by EditThisCookie) to Netscape format
 * @param {string} inputFile - Path to the JSON cookie file
 * @param {string} outputFile - Path to save the Netscape format cookie file
 * @returns {Promise<void>}
 */
async function convertJsonToNetscape(inputFile, outputFile) {
    try {
        // Resolve paths relative to current directory if not absolute
        const inputPath = path.isAbsolute(inputFile)
            ? inputFile
            : path.join(process.cwd(), inputFile);

        const outputPath = path.isAbsolute(outputFile)
            ? outputFile
            : path.join(process.cwd(), outputFile);

        // Read JSON file
        const jsonData = await fs.promises.readFile(inputPath, 'utf8');
        let cookies;

        try {
            cookies = JSON.parse(jsonData);
        } catch (error) {
            console.error('Error parsing JSON:', error.message);
            throw new Error('Invalid JSON format');
        }

        if (!Array.isArray(cookies)) {
            throw new Error('JSON cookies must be an array');
        }

        // Create Netscape format string
        let netscapeFormat = '# Netscape HTTP Cookie File\n';
        netscapeFormat += '# https://curl.haxx.se/docs/http-cookies.html\n';
        netscapeFormat += '# This file was generated by cookie-converter.js\n\n';

        for (const cookie of cookies) {
            // Check if cookie has the required fields
            if (!cookie.domain || !cookie.path || cookie.name === undefined || cookie.value === undefined) {
                console.warn('Skipping invalid cookie:', cookie);
                continue;
            }

            // Format: domain flag path secure expiry name value
            const domain = cookie.domain.startsWith('.') ? cookie.domain : `.${cookie.domain}`;
            const flag = 'TRUE';
            const path = cookie.path || '/';
            const secure = cookie.secure ? 'TRUE' : 'FALSE';
            const expiry = cookie.expirationDate ? Math.floor(cookie.expirationDate) : 0;
            const { name, value } = cookie;

            netscapeFormat += `${domain}\t${flag}\t${path}\t${secure}\t${expiry}\t${name}\t${value}\n`;
        }

        // Write to output file
        await fs.promises.writeFile(outputPath, netscapeFormat);
        console.log(`Converted cookies from ${inputPath} to ${outputPath}`);

        return { success: true, message: 'Conversion successful', path: outputPath };
    } catch (error) {
        console.error('Conversion failed:', error);
        throw error;
    }
}

// If called directly from command line
if (require.main === module) {
    const args = process.argv.slice(2);

    if (args.length < 2) {
        console.log(`
Usage: node cookie-converter.js <input.json> <output.txt>

Converts cookies from JSON format (as exported by EditThisCookie) to Netscape format.

Example:
  node cookie-converter.js youtube_cookies.json youtube_cookies.txt
`);
        process.exit(1);
    }

    const [inputFile, outputFile] = args;
    convertJsonToNetscape(inputFile, outputFile)
        .then(() => {
            console.log('✅ Conversion completed successfully');
        })
        .catch(error => {
            console.error('❌ Conversion failed:', error.message);
            process.exit(1);
        });
}

module.exports = { convertJsonToNetscape }; 